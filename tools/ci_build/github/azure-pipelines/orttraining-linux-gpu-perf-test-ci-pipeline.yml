trigger: none

jobs:
- job: Onnxruntime_Linux_GPU_Training_Perf_Test

  timeoutInMinutes: 120

  variables: 
  - group: 'ortperf' # variable group

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - script: >
      tools/ci_build/github/linux/run_dockerbuild.sh
      -o ubuntu16.04 -d gpu -r $(Build.BinariesDirectory)
      -x "
      --config RelWithDebInfo
      --enable_training
      --update --build
      "
    displayName: 'Build performance tests'

  - script: >
      docker run --gpus all -h OrtTrainingDev0 --rm --name onnxruntime-gpu-perf 
      --volume $(Build.SourcesDirectory):/onnxruntime_src 
      --volume $(Build.BinariesDirectory):/build 
      --volume /bert_ort/bert_models:/build/bert_models:ro 
      --volume /bert_data:/build/bert_data:ro 
      -e NIGHTLY_BUILD onnxruntime-ubuntu16.04-cuda10.1-cudnn7.6
      /usr/bin/python3.6 "/onnxruntime_src/orttraining/tools/ci_test/run_bert_perf_test.py" 
      "--binary_dir" "/build/RelWithDebInfo" 
      "--training_data_root" "/build/bert_data" 
      "--model_root" "/build/bert_models"
    displayName: 'Run bert performance tests'

  # generate jdbc.properties
  - script: >
      mkdir -p $(Build.SourcesDirectory)/tools/perf_util/src/main/resources &&
      printf 'url=jdbc:mysql://onnxruntimedashboard.mysql.database.azure.com/onnxruntime?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8\nuser=powerbi@onnxruntimedashboard\npassword=$ORT_PERF_PASSWORD' 
      > $(Build.SourcesDirectory)/tools/perf_util/src/main/resources/jdbc.properties"      
    env:
      ORT_PERF_PASSWORD: $(ortperf) 
    displayName: 'Create resource file'

  #  maven build
  - script: >
      cd $(Build.SourcesDirectory)/tools/perf_util &&
      mvn package && ls -la $(Build.SourcesDirectory)/tools/perf_util/target"
    displayName: 'Maven build'

  # generate jdbc.properties
  # - script: >
  #     docker run -h OrtTrainingDev0 --rm --name onnxruntime-gpu-perf 
  #     --volume $(Build.SourcesDirectory):/onnxruntime_src 
  #     -e NIGHTLY_BUILD onnxruntime-ubuntu16.04-cuda10.1-cudnn7.6
  #     /bin/bash -c "/bin/mkdir -p /onnxruntime_src/tools/perf_util/src/main/resources &&
  #     /usr/bin/printf 'url=jdbc:mysql://onnxruntimedashboard.mysql.database.azure.com/onnxruntime?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8\nuser=powerbi@onnxruntimedashboard\npassword=$ORT_PERF_PASSWORD' 
  #     > /onnxruntime_src/tools/perf_util/src/main/resources/jdbc.properties"      
  #   env:
  #     ORT_PERF_PASSWORD: $(ortperf) 
  #   displayName: 'Create resource file'

  # - script: >
  #     docker run -h OrtTrainingDev0 --rm --name onnxruntime-gpu-perf 
  #     --volume $(Build.SourcesDirectory):/onnxruntime_src 
  #     -e NIGHTLY_BUILD onnxruntime-ubuntu16.04-cuda10.1-cudnn7.6
  #     /bin/bash -c "/bin/mkdir -p /onnxruntime_src/tools/perf_util/src/main/resources &&
  #     /usr/bin/printf 'url=jdbc:mysql://onnxruntimedashboard.mysql.database.azure.com/onnxruntime?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8\nuser=powerbi@onnxruntimedashboard\npassword=$ORT_PERF_PASSWORD' 
  #     > /onnxruntime_src/tools/perf_util/src/main/resources/jdbc.properties"      
  #   env:
  #     ORT_PERF_PASSWORD: $(ortperf) 
  #   displayName: 'Create resource file'


  #  maven build
  # - script: >
  #     docker run -h OrtTrainingDev0 --rm --name onnxruntime-gpu-perf 
  #     --volume $(Build.SourcesDirectory):/onnxruntime_src 
  #     -e NIGHTLY_BUILD onnxruntime-ubuntu16.04-cuda10.1-cudnn7.6
  #     cd /onnxruntime_src/tools/perf_util &&
  #     mvn package && ls -la /onnxruntime_src/tools/perf_util/target"
  #   displayName: 'Maven build'


  #
  # TODO scripts to run java
  #

  - template: templates/clean-agent-build-directory-step.yml
